---

- name: Copy GPG Files
  copy: src="{{ gpg_core_files_dir }}/" dest="{{ gpg_core_files_remote_dir }}"

- name: Check if Project Exists
  changed_when: False
  failed_when: False
  register: signer_project_exists
  shell: oc get project {{ openshift_image_management_project_name }}

- name: Create OpenShift Project
  shell: oc adm new-project {{ openshift_image_management_project_name }} --display-name="{{ openshift_image_management_project_display_name }}"
  when: signer_project_exists.rc != 0

- name: Label Image Signer Nodes
  shell: oc label node {{ item }} {{ openshift_image_management_node_label }} --overwrite=true
  when: (restrict_local_keys | default(True)) == True
  with_items: "{{ groups[ image_managers_hostgroup ] }}"

- name: Taint Image Signer Nodes
  shell: oc adm taint nodes {{ item }} {{ openshift_image_management_node_taint }} --overwrite=true
  when: (restrict_local_keys | default(True)) == True
  with_items: "{{ groups[ image_managers_hostgroup ] }}"

- name: Check if GPG Secret Exists
  changed_when: False
  failed_when: False
  register: signer_secret_exists
  shell: oc get secret {{ openshift_image_management_gpg_secret_name }} -n {{ openshift_image_management_project_name }}

- name: Delete GPG Secret
  shell: oc delete secret {{ openshift_image_management_gpg_secret_name }} -n {{ openshift_image_management_project_name }}
  when: signer_secret_exists.rc == 0

- name: Create GPG Secret
  shell: oc secret new {{ openshift_image_management_gpg_secret_name }} {{ gpg_core_files_remote_dir }} -n {{ openshift_image_management_project_name }}

- name: Copy OpenShift Configurations
  copy: src="{{ item }}" dest="{{ openshift_configs_dest_dir }}/"
  with_items: "{{ openshift_configs }}"

- name: Configure Privileged SCC
  shell: oc adm policy add-scc-to-user privileged  -n {{ openshift_image_management_project_name }} -z {{ openshift_image_management_sa_name }}

- name: Instantiate OpenShift Templates
  shell: "{{ item }}"
  with_items:
  - "oc process -p NAMESPACE={{ openshift_image_management_project_name }} -p SERVICE_ACCOUNT_NAME={{ openshift_image_management_sa_name }} -f {{ openshift_configs_dest_dir }}/{{ openshift_policy_template }} | oc apply -n {{ openshift_image_management_project_name }} -f-"
  - "oc apply -n {{ openshift_image_management_project_name }} -f {{ openshift_configs_dest_dir }}/{{ openshift_sign_image_template }}"
  - "oc apply -n {{ openshift_image_management_project_name }} -f {{ openshift_configs_dest_dir }}/{{ openshift_sign_image_pod_template }}"
  - "oc apply -n {{ openshift_image_management_project_name }} -f {{ openshift_configs_dest_dir }}/{{ openshift_scan_image_pod_template }}"
  - "oc process -p NAMESPACE={{ openshift_image_management_project_name }} -f {{ openshift_configs_dest_dir }}/{{ openshift_base_scan_template }} | oc apply -n {{ openshift_image_management_project_name }} -f-"

- name: Instantiate OpenShift Templates (Event Controller)
  shell: "{{ item }}"
  with_items:
  - "oc process -p NAMESPACE={{ openshift_image_management_project_name }} -p SIGN_BY={{ gpg_publickey_file }} -f {{ openshift_configs_dest_dir }}/{{ openshift_event_controller_template }} | oc apply -n {{ openshift_image_management_project_name }} -f-"
  when: deploy_eventcontroller

#- name: Remove Configuration Directories
#  file:
#    state: absent
#    path: "{{ item }}"
#  with_items:
#  - "{{ gpg_core_files_remote_dir }}"
#  - "{{ openshift_configs_dest_dir }}"

- name: Export Default Project Template
  shell: oc adm create-bootstrap-project-template -o yaml > {{ tmp_default_project_template }}
  when: (replace_default_project_template | default(True)) == True

- name: Modify Default Project Template
  lineinfile:
    dest: "{{ tmp_default_project_template }}"
    insertbefore: "^parameters:"
    line: "{{ lookup('template', 'signature-viewer-default-template.j2') }}"
  when: (replace_default_project_template | default(True)) == True

- name: Apply Default Project Template
  shell: oc apply -n default -f {{ tmp_default_project_template }}
  when: (replace_default_project_template | default(True)) == True

- name: Remove Default Project Template File
  file:
    state: absent
    path: "{{ tmp_default_project_template }}"
  when: (replace_default_project_template | default(True)) == True

- name: Update Master Configuration
  become: true
  delegate_to: "{{ item }}"
  lineinfile:
    line: '  projectRequestTemplate: "default/project-request"'
    regexp: '  projectRequestTemplate:'
    path: /etc/origin/master/master-config.yaml
  register: master_config_result
  when: (replace_default_project_template | default(True)) == True
  with_items: "{{ groups.masters }}"

- name: Restart Master Service
  become: true
  delegate_to: "{{ item['_ansible_delegated_vars']['ansible_delegated_host'] }}"
  register: restart_masters
  service:
    name: "{{ ((groups['masters']|length|int > 1 or openshift_version | float >= 3.7) | default(True)) | ternary('atomic-openshift-master-api','atomic-openshift-master') }}"
    state: restarted
  with_items: "{{ master_config_result.results }}"
  when: (replace_default_project_template | default(True)) == True and item.changed

- name: Pause to let Master Service Come Back Online
  pause:
    seconds: 10
  when: restart_masters is defined and restart_masters.changed is defined and restart_masters.changed == True

- name: Sign Base Signer Scanner Image
  block:
  - name: "Check ImageStream Status"
    delay: 10
    register: is_json
    retries: 90
    shell: oc get is image-sign-scan-base -n {{ openshift_image_management_project_name }} -o json
    until: (is_json.stdout | from_json)['status']['tags'] is defined and (is_json.stdout | from_json)['status']['tags'] | length > 0

  - name: Query Image
    register: query_image_output
    shell: oc get image {{ (is_json.stdout | from_json)['status']['tags'][0]['items'][0]['image'] }} -o json

  - name: Instantiate Signing Pod
    shell: oc process {{ openshift_image_management_project_name }}//{{ openshift_sign_pod_template_name }} -p IMAGE_TO_SIGN={{ (is_json.stdout | from_json)['status']['tags'][0]['items'][0]['dockerImageReference'].split('@')[0] }}:{{ (is_json.stdout | from_json)['status']['tags'][0]['tag'] }} -p IMAGE_DIGEST={{ (is_json.stdout | from_json)['status']['tags'][0]['items'][0]['image'] }} -p SIGN_BY={{ gpg_publickey_file }} | oc apply -n {{ openshift_image_management_project_name }} -f-
    when: (query_image_output.stdout | from_json)['signatures'] is not defined
  when: not deploy_eventcontroller
